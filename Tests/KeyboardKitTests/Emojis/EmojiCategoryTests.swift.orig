//
//  EmojiCategoryTests.swift
//  KeyboardKitTests
//
//  Created by Daniel Saidi on 2020-05-05.
//  Copyright ¬© 2020 Daniel Saidi. All rights reserved.
//

import Quick
import Nimble
import KeyboardKit
import Mockery

class EmojiCategoryTests: QuickSpec {
    
    override func spec() {
        
        describe("emoji category") {
            
            func firstEmoji(for category: EmojiCategory) -> String {
                category.emojis.first!
            }
            
            func firstEmojiAction(for category: EmojiCategory) -> KeyboardAction {
                category.emojiActions.first!
            }
            
            it("has built-in sort order") {
                let categories = EmojiCategory.all
                expect(categories).to(equal([
<<<<<<< HEAD
                    .frequent,
=======
                    .frequents,
>>>>>>> master
                    .smileys,
                    .animals,
                    .foods,
                    .activities,
                    .travels,
                    .objects,
                    .symbols,
                    .flags
                ]))
            }
            
            it("contains the correct emojis") {
                expect(firstEmoji(for: .activities)).to(equal("‚öΩÔ∏è"))
                expect(firstEmoji(for: .animals)).to(equal("üê∂"))
                expect(firstEmoji(for: .flags)).to(equal("üè≥Ô∏è"))
                expect(firstEmoji(for: .foods)).to(equal("üçè"))
                expect(firstEmoji(for: .objects)).to(equal("‚åöÔ∏è"))
                expect(firstEmoji(for: .smileys)).to(equal("üòÄ"))
                expect(firstEmoji(for: .symbols)).to(equal("‚ù§Ô∏è"))
                expect(firstEmoji(for: .travels)).to(equal("üöó"))
            }
            
            it("contains the correct emoji set") {
                expect(firstEmojiAction(for: .activities)).to(equal(.emoji("‚öΩÔ∏è")))
                expect(firstEmojiAction(for: .animals)).to(equal(.emoji("üê∂")))
                expect(firstEmojiAction(for: .flags)).to(equal(.emoji("üè≥Ô∏è")))
                expect(firstEmojiAction(for: .foods)).to(equal(.emoji("üçè")))
                expect(firstEmojiAction(for: .objects)).to(equal(.emoji("‚åöÔ∏è")))
                expect(firstEmojiAction(for: .smileys)).to(equal(.emoji("üòÄ")))
                expect(firstEmojiAction(for: .symbols)).to(equal(.emoji("‚ù§Ô∏è")))
                expect(firstEmojiAction(for: .travels)).to(equal(.emoji("üöó")))
            }
        }
    }
}
